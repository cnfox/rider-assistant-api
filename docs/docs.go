// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2022-06-20 18:37:27.609944731 +0800 CST m=+0.028564364

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://github.com/armnerd/go-skeleton",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/article/info": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "文章详情",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "文章 id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/data.Article"
                        }
                    }
                }
            }
        },
        "/api/article/list": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "文章列表",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "页码",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "分类",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "时间轴",
                        "name": "timeline",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "搜索",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/article.listResult"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "article.listResult": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "integer"
                },
                "count": {
                    "type": "integer"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/data.Article"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "search": {
                    "type": "string"
                },
                "timeline": {
                    "type": "integer"
                },
                "total": {
                    "type": "number"
                }
            }
        },
        "data.Article": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "cover": {
                    "type": "string"
                },
                "ctime": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "intro": {
                    "type": "string"
                },
                "raw": {
                    "type": "string"
                },
                "timeline": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "go-skeleton",
	Description: "Golang 脚手架，Go 简单，Go 直接",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
